{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kentauchi/Documents/WMDD/Spring2021/Capstone/Capstone-MobileApp/src/screens/SetScheduleScreen.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Text } from \"react-native-elements\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport CalendarStrip from \"react-native-calendar-strip\";\nimport Calendar from \"../components/Profile/Calendar\";\nimport moment from \"moment\";\n\nvar SetScheduleScreen = function SetScheduleScreen() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDatePickerVisible = _useState2[0],\n      setDatePickerVisibility = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isTimePickerVisible = _useState4[0],\n      setTimePickerVisibility = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedTime = _useState6[0],\n      setSelectedTime = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedDate = _useState8[0],\n      setSelectedDate = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      formatedTime = _useState10[0],\n      setFormatedTime = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      ampm = _useState12[0],\n      setAmpm = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      dateTime = _useState14[0],\n      setDateTime = _useState14[1];\n\n  var showTimePicker = function showTimePicker() {\n    setTimePickerVisibility(true);\n  };\n\n  var hideTimePicker = function hideTimePicker() {\n    setTimePickerVisibility(false);\n  };\n\n  var handleConfirm = function handleConfirm(time) {\n    console.log(\"A time has been picked: \", new Date(time).toLocaleString());\n    var readableTime = new Date(time).toLocaleString();\n    var arrayTime = readableTime.split(\" \");\n    setFormatedTime(arrayTime.length !== 5 ? arrayTime[1].slice(0, -3) : arrayTime[3].slice(0, -3));\n    setAmpm(arrayTime.length !== 5 ? arrayTime[2] : \"\");\n    setSelectedTime(time.toISOString().split(\"T\")[1]);\n    setTimePickerVisibility(false);\n  };\n\n  useEffect(function () {\n    var concatDateTime = selectedDate + \"T\" + selectedTime;\n    setDateTime(concatDateTime);\n  }, [selectedDate, selectedTime, dateTime]);\n  var formatedDate = new Date();\n  return React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(CalendarStrip, {\n    scrollable: true,\n    onDateSelected: function onDateSelected(date) {\n      return showTimePicker(), setSelectedDate(date.toISOString().substring(0, 10));\n    },\n    style: {\n      paddingTop: 40,\n      paddingBottom: 10,\n      height: 200,\n      marginHorizontal: 25\n    },\n    calendarHeaderStyle: {\n      color: \"gray\",\n      fontSize: 18\n    },\n    dateNumberStyle: {\n      color: \"#B7B7B7\",\n      fontSize: 24\n    },\n    dateNameStyle: {\n      color: \"#B7B7B7\"\n    },\n    styleWeekend: false,\n    highlightDateNumberStyle: {\n      color: \"blue\",\n      fontSize: 24\n    },\n    highlightDateNameStyle: {\n      color: \"blue\"\n    },\n    disabledDateNameStyle: {\n      color: \"grey\"\n    },\n    disabledDateNumberStyle: {\n      color: \"grey\"\n    },\n    iconStyle: {\n      display: \"none\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })), React.createElement(DateTimePickerModal, {\n    isVisible: isTimePickerVisible,\n    onConfirm: handleConfirm,\n    onCancel: hideTimePicker,\n    mode: \"time\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), !selectedTime ? null : React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.bookTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    h4: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Session Booked\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Bell Icon\")), React.createElement(View, {\n    style: styles.bookInfo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, moment(selectedDate).format(\"MMM Do YY\")), React.createElement(Text, {\n    style: {\n      marginLeft: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, formatedTime + \" \" + ampm))));\n};\n\nexport default SetScheduleScreen;\nvar styles = StyleSheet.create({\n  bookTitle: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginHorizontal: 25,\n    marginBottom: 10\n  },\n  bookInfo: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    marginHorizontal: 25\n  }\n});","map":{"version":3,"sources":["/Users/kentauchi/Documents/WMDD/Spring2021/Capstone/Capstone-MobileApp/src/screens/SetScheduleScreen.js"],"names":["React","useState","useEffect","Text","DateTimePickerModal","CalendarStrip","Calendar","moment","SetScheduleScreen","isDatePickerVisible","setDatePickerVisibility","isTimePickerVisible","setTimePickerVisibility","selectedTime","setSelectedTime","selectedDate","setSelectedDate","formatedTime","setFormatedTime","ampm","setAmpm","dateTime","setDateTime","showTimePicker","hideTimePicker","handleConfirm","time","console","log","Date","toLocaleString","readableTime","arrayTime","split","length","slice","toISOString","concatDateTime","formatedDate","backgroundColor","flex","date","substring","paddingTop","paddingBottom","height","marginHorizontal","color","fontSize","display","styles","bookTitle","bookInfo","format","marginLeft","StyleSheet","create","flexDirection","justifyContent","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, View, Button } from \"react-native\";\nimport { Text } from \"react-native-elements\";\n\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport CalendarStrip from \"react-native-calendar-strip\";\n// import DatePicker from \"react-native-date-picker\";\n\nimport Calendar from \"../components/Profile/Calendar\";\n\nimport moment from \"moment\";\n\nconst SetScheduleScreen = () => {\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n  const [isTimePickerVisible, setTimePickerVisibility] = useState(false);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [formatedTime, setFormatedTime] = useState(null);\n  const [ampm, setAmpm] = useState(null);\n  const [dateTime, setDateTime] = useState([]);\n\n  //   const showDatePicker = () => {\n  //     setDatePickerVisibility(true);\n  //   };\n\n  //   const hideDatePicker = () => {\n  //     setDatePickerVisibility(false);\n  //   };\n\n  const showTimePicker = () => {\n    setTimePickerVisibility(true);\n  };\n\n  const hideTimePicker = () => {\n    setTimePickerVisibility(false);\n  };\n\n  const handleConfirm = (time) => {\n    console.log(\"A time has been picked: \", new Date(time).toLocaleString());\n    const readableTime = new Date(time).toLocaleString();\n    const arrayTime = readableTime.split(\" \");\n    setFormatedTime(\n      arrayTime.length !== 5\n        ? arrayTime[1].slice(0, -3)\n        : arrayTime[3].slice(0, -3)\n    );\n    setAmpm(arrayTime.length !== 5 ? arrayTime[2] : \"\");\n    setSelectedTime(time.toISOString().split(\"T\")[1]);\n    setTimePickerVisibility(false);\n  };\n\n  //   console.log(selectedDate);\n  //   console.log(selectedTime);\n\n  //   const dateTime = moment(\n  //     `${selectedDate} ${selectedTime}`,\n  //     \"YYYY-MM-DD HH:mm:ss\"\n  //   ).format();\n\n  useEffect(() => {\n    const concatDateTime = selectedDate + \"T\" + selectedTime;\n    setDateTime(concatDateTime);\n  }, [selectedDate, selectedTime, dateTime]);\n\n  const formatedDate = new Date();\n\n  return (\n    <View style={{ backgroundColor: \"white\", flex: 1 }}>\n      <View>\n        <CalendarStrip\n          scrollable\n          onDateSelected={(date) => (\n            showTimePicker(),\n            setSelectedDate(date.toISOString().substring(0, 10))\n          )}\n          style={{\n            paddingTop: 40,\n            paddingBottom: 10,\n            height: 200,\n            marginHorizontal: 25,\n          }}\n          calendarHeaderStyle={{ color: \"gray\", fontSize: 18 }}\n          dateNumberStyle={{ color: \"#B7B7B7\", fontSize: 24 }}\n          dateNameStyle={{ color: \"#B7B7B7\" }}\n          styleWeekend={false}\n          highlightDateNumberStyle={{ color: \"blue\", fontSize: 24 }}\n          highlightDateNameStyle={{ color: \"blue\" }}\n          disabledDateNameStyle={{ color: \"grey\" }}\n          disabledDateNumberStyle={{ color: \"grey\" }}\n          iconStyle={{ display: \"none\" }}\n        />\n      </View>\n      {/* <DatePicker mode={\"time\"} /> */}\n      <DateTimePickerModal\n        isVisible={isTimePickerVisible}\n        onConfirm={handleConfirm}\n        onCancel={hideTimePicker}\n        mode=\"time\"\n      />\n\n      {!selectedTime ? null : (\n        <>\n          <View style={styles.bookTitle}>\n            <Text h4>Session Booked</Text>\n            <Text>Bell Icon</Text>\n          </View>\n          <View style={styles.bookInfo}>\n            <Text>{moment(selectedDate).format(\"MMM Do YY\")}</Text>\n            <Text style={{ marginLeft: 20 }}>{formatedTime + \" \" + ampm}</Text>\n          </View>\n        </>\n      )}\n    </View>\n  );\n};\n\nexport default SetScheduleScreen;\n\nconst styles = StyleSheet.create({\n  bookTitle: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginHorizontal: 25,\n    marginBottom: 10,\n  },\n  bookInfo: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    marginHorizontal: 25,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}